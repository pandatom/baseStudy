样例1：


		#!/bin/bash

		#jar包文件路径及名称（目录按照各自配置）
		APP_NAME=/home/jar/sys/modules/gen/lgs-modules-gen.jar

		#日志文件路径及名称（目录按照各自配置）
		LOG_FILE=/home/jar/sys/modules/gen/logs/lgs-modules-gen.log

		#查询进程，并杀掉当前jar/java程序

		pid=`ps -ef|grep $APP_NAME | grep -v grep | awk '{print $2}'`
		kill -9 $pid
		echo "$pid进程终止成功"

		sleep 2

		#判断jar包文件是否存在，如果存在启动jar包，并时时查看启动日志

		if test -e $APP_NAME
		then
		echo '文件存在,开始启动此程序...'

		# 启动jar包，指向日志文件，2>&1 & 表示打开或指向同一个日志文件
		nohup java -jar $APP_NAME > $LOG_FILE 2>&1 &

		#实时查看启动日志（此处正在想办法启动成功后退出）
		tail -f $LOG_FILE

		#输出启动成功（上面的查看日志没有退出，所以执行不了，可以去掉）

		#echo '$APP_NAME 启动成功...'
		else
		echo '$APP_NAME 文件不存在,请检查。'
		fi


样例2：

		#!/bin/bash
		#chkconfig: 2345 80 90
		#date:2022年3月21日
		 
		PID=$(ps -ef | grep  lgs-modules-file.jar | grep -v grep | awk '{ print $2 }')
		 
		if [ -z "$PID" ]
		then
		    echo "程序未启动。"
		else
		    echo "程序在启动中，正在停止..."
		    kill -9 $PID
		fi
		 
		 
		echo '开启启动程序 ...'
		 
		nohup java -javaagent:/home/skywalking/apache-skywalking-apm-bin/agent/skywalking-agent.jar=agent.service_name=lgs-modules-job,collector.backend_service=10.10.11.79:11800 -jar lgs-modules-job.jar > /home/jar/sys/modules/job/logs/lgs-modules-job.log 2>&1 &
		 
		 
		 
		echo "starting service..."
		sleep 20
		 
		#根据重启后是否有当前应用判断启动是否成功
		endPID=$(ps -ef | grep  lgs-modules-file.jar | grep -v grep | awk '{ print $2 }')
		 
		if [ -z "$endPID" ]
		then
		    echo "程序启动失败。"
		else
		    echo "程序重启成功...pid："${endPID}
		    
		fi


样例3：
		#!/bin/sh
		port=8081 #定义变量等号左右不能有空格
		jar_name=/usr/local/software/system-2.4.0.jar
		 
		#运行脚本提示信息
		tips(){
		    echo "-------------------------------------"
		    echo ""
		    echo "项目端口: ${port}"
		    echo "项目地址： ${jar_name}"
		    echo ""
		    echo "你可以使用如下参数进行操作"
		    echo "-status -查看当前项目运行状态"
		    echo "-start  -启动当前项目"
		    echo "-stop  -停止当前项目"
		    echo "-restart -重启当前项目"
		    echo ""
		    echo "-------------------------------------"
		}
		 
		#查看状态
		status(){
		    #查询端口的PID {print $7}-取出打印的第七个值
		    pid=`netstat -apn |grep $port |awk '{print $7}' |cut -d/ -f 1`
		    #判断端口是否被占用
		    if [ -z "${pid}" ];then
		        echo "没有项目在运行"
		    else
		        echo "项目正在运行中"
		    fi
		}
		 
		#启动项目
		start(){
		    pid=`netstat -apn |grep $port |awk '{print $7}' |cut -d/ -f 1`
		    if [ -z "${pid}" ];then
		        echo "正在启动......"
		        nohup /srv/program/jdk1.8.0_191/bin/java -jar /usr/local/software/system-2.4.0.jar >/dev/null 2>&1 &
		    else
		        echo "项目运行中或端口已被占用"
		    fi
		 
		}
		 
		#停止项目	
		stop(){
		    pid=`netstat -apn |grep $port |awk '{print $7}' |cut -d/ -f 1`
		    if [ -z "${pid}" ];then
		        echo "没有项目在运行，请先启动"
		    else
		        kill -9 $pid
		        echo "已杀死端口为 ${port} 的应用"
		    fi
		}
		 
		#重启项目
		restart(){
		    pid=`netstat -apn |grep $port |awk '{print $7}' |cut -d/ -f 1`
		    echo "正在杀死端口 ${port} 的pid ${pid} 中..."
		    if [ -z "${pid}" ];then
		        echo "项目未启动"
		    else
		        kill -9 $pid
		    fi
		    sleep 5 #睡眠五秒
		    start  #调用启动方法
		    echo "项目重启成功！"
		}
		 
		#参数选项
		case "$1" in
		    "-status")
		     status
		     ;;
		    "-start")
		     start
		     ;;
		    "-stop")
		     stop
		     ;;
		    "-restart")
		     restart
		     ;;
		    *)
		     tips
		     ;;
		esac	
